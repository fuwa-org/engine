
//!
/*

Naming convention
-----------------
all grammars that will be used in the rust/are in the AST should be in SNAKE_CASE in all caps
e.g.
EXPR_GRAMMAR = { ... }

otherwise you should use normal snake_case
e.g.
expr_grammar = { ... }

*/
//!




// ################################################################################
// Comments "//" and "/* */" (multiline) are allowed.
// ################################################################################
COMMENT = _{ ("/*" ~ (!"*/" ~ ANY)* ~ "*/") | ("//" ~ (!line_terminator ~ ANY)*) }

// ################################################################################
// Line terminators (\n, \r, \r\n)
// ################################################################################
line_terminator = _{ "\u{000A}" | "\u{000D}" | "\u{2028}" | "\u{2029}" }


// ################################################################################
// White space (space, tab)
// ################################################################################
WHITESPACE = _{ "\u{0009}" | "\u{000B}" | "\u{000C}" | "\u{0020}" }


// ################################################################################
// String Control
// ################################################################################
inner = @{ CHAR* }
STRING = @{ "\"" ~ inner ~ "\""  | "'" ~ inner ~ "'" }
CHAR = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}


// ################################################################################
// Number
// ################################################################################
NUMBER = @{ int ~ ("." ~ ASCII_DIGIT*)? ~ (^"e" ~ int)? }
    int = { ("+" | "-")? ~ ASCII_DIGIT+ }


COMMAND = { 
    command_keyword
    ~ WHITESPACE*
    ~ identifier
    ~ WHITESPACE*
    ~ BLOCK
}

ENV = {
    env_keyword
    ~ WHITESPACE*
    ~ identifier
    ~ WHITESPACE*
    ~ BLOCK
}

BLOCK = {
    "{" ~ (WHITESPACE* ~ NEWLINE)*
    ~ OPTIONS*
    ~ (WHITESPACE* ~ NEWLINE)* ~ "}"
}

DECORATOR = {
    "@" ~ identifier
    ~ (WHITESPACE* ~ arguments)?
}


FUNCTION_CALL = {
    identifier
    ~ (WHITESPACE* ~ arguments)?
}

values = _{
    NUMBER
    | STRING
    | FUNCTION_CALL
}


arguments = { 
    "(" 
    ~ WHITESPACE* 
    ~ (
        (
            OPTIONS
            | values
            | identifier
        ) ~ ","?
    )
    ~ WHITESPACE* 
    ~ ")"?
}
KEYWORDS = _{ ((DECORATOR ~ NEWLINE)* ~ (COMMAND | ENV)) }

OPTIONS = { identifier ~ WHITESPACE* ~ ":" ~ WHITESPACE* ~ values }

identifier = @{ ASCII_ALPHANUMERIC ~ ( "_" | "-" | ASCII_ALPHANUMERIC)* }
env_keyword = { "env" }
command_keyword = { "command" }

statement = _{
   (    
        line_terminator |
        STRING |
        NUMBER |
        KEYWORDS

   )
}

program = _{ SOI ~ (COMMENT | statement*) ~ EOI }